# This is a basic workflow to help you get started with Actions

name: AKS 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
#     paths:
#       - 'AKS/**'

env:
  REGISTRY_NAME: acrrepo.azurecr.io
  CLUSTER_NAME: aks-test-01
  CLUSTER_RESOURCE_GROUP: rg-terraform-test-3
  NAMESPACE: default
  NODE_VERSION: '10.x' 
#   SECRET: {secret-name}
#   APP_NAME: {app-name}


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: './AKS'

    steps:
      - uses: actions/checkout@v2
      
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
        
      - name: npm install, build, and test
        run: |
          # Build and test the project, then
          # deploy to Azure Web App.
          npm install
      
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}
          username: ${{ secrets.REGISTRY_USERNAME }} 
          password: ${{ secrets.REGISTRY_PASSWORD }}


      # Runs a set of commands using the runners shell
      - name: Docker Build
        run: |
          docker build . -t ${{ env.REGISTRY_NAME }}/node-web-app:1.0
          docker push ${{ env.REGISTRY_NAME }}/node-web-app:1.0
         
#        docker run -p 49160:8080 -d ${{ env.REGISTRY_NAME }}/node-web-app:1.0    
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
        
      - uses: azure/k8s-deploy@v1
        with:
          manifests: |
            deployment.yml
            service.yml
          images: |
            ${{ env.REGISTRY_NAME }}/node-web-app:1.0
          namespace: ${{ env.NAMESPACE }}
